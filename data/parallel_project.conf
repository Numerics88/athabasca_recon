# -------------------------------------------------------------------------
#  Configuration file for parallel_project.py
#
#  This configuration file is in the format of python source code.
#  If you stick with simple assignments, then it looks like a typical
#  configuration file, and can probably be read with other file parsers,
#  if you wish to do so.

# Input file needs to be an ITK MetaImage file with the volume data.
input_data_file = "synthetic_volume.mhd"

# Root for the output file name.  The following files will be generated:
#  - {output_file_root}.mhd : The projections (also a file
#                             {output_file_root}.raw of course, as this goes
#                             with the .mhd file.
#  - {output_file_root}-dark.mhd : The dark field projections.
#  - {output_file_root}-bright.mhd : The bright field projections.
#  - {output_file_root}-bright_after.mhd : The bright field projections at
#                              the end of the measurement.  Only generated
#                              if beam_power_decay_factor < 1 .
output_file_root = "projections"

# Detector details
detector_horizontal_pixels = 96
detector_vertical_pixels = 64
detector_pixel_size = 0.8
detector_vertical_center = 0
detector_horizontal_offset = 0

number_of_projections = 129
projection_at_180 = 1

# For the following value, if 0 (false), want the projection as seen from the
# center looking out towards the projection.  If 1 (true), we want the mirror
# image of this, in other words looking at the projection from behind it.
view_projections_from_behind = 0

# The following is set to a value less than 1 simulates reduced beam intensity
# with time, as occurs in a synchrotron.
beam_power_decay_factor = 1

# If this is greater than 1, then multiple dark and bright fields are recorded
# Note that beam_power_decay_factor applies to each of them.
number_of_dark_field_measurements = 1

# A list of bad pixels.  This can be an array or list of coordinate pairs
bad_pixel_list = []
